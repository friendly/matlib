% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Eqn_helpers.R
\name{Eqn_helpers}
\alias{Eqn_helpers}
\alias{overset}
\alias{underset}
\alias{overbrace}
\alias{underbrace}
\alias{Eqn_overset}
\alias{Eqn_underset}
\alias{Eqn_overbrace}
\alias{Eqn_underbrace}
\alias{Eqn_newline}
\alias{Eqn_hspace}
\alias{Eqn_vspace}
\alias{Eqn_size}
\alias{Eqn_text}
\alias{newline}
\alias{hspace}
\alias{vspace}
\alias{size}
\title{Helpers to Compose Equations with Eqn}
\usage{
overset(
  x,
  label,
  label.style = c("mathbf", "mathrm", "mathit", "mathsf", "mathcal", "mathtt", " ")
)

underset(
  x,
  label,
  label.style = c("mathbf", "mathrm", "mathit", "mathsf", "mathcal", "mathtt", " ")
)

overbrace(
  x,
  label = NULL,
  label.style = c("mathbf", "mathrm", "mathit", "mathsf", "mathcal", "mathtt", " ")
)

underbrace(
  x,
  label = NULL,
  label.style = c("mathbf", "mathrm", "mathit", "mathsf", "mathcal", "mathtt", " ")
)

Eqn_overset(
  x,
  label,
  label.style = c("mathbf", "mathrm", "mathit", "mathsf", "mathcal", "mathtt", " ")
)

Eqn_underset(
  x,
  label,
  label.style = c("mathbf", "mathrm", "mathit", "mathsf", "mathcal", "mathtt", " ")
)

Eqn_overbrace(
  x,
  label = NULL,
  label.style = c("mathbf", "mathrm", "mathit", "mathsf", "mathcal", "mathtt", " ")
)

Eqn_underbrace(
  x,
  label = NULL,
  label.style = c("mathbf", "mathrm", "mathit", "mathsf", "mathcal", "mathtt", " ")
)

Eqn_newline(space = 0)

newline(space = 0)

Eqn_text(text)

Eqn_hspace(lhs = 5, mid = "", rhs = NULL, times = 1)

hspace(lhs = 5, mid = "", rhs = NULL, times = 1)

Eqn_vspace(space)

vspace(space)

Eqn_size(string, size = 0)

size(string, size = 0)
}
\arguments{
\item{x}{a numeric or character matrix, or a character string LaTeX expression or 
a \code{"latexMatrix"} object}

\item{label}{a character string used as the label above or below the object \code{x}.
If missing, and a \code{"matrix"} object was passed, it's name is used as the label.
In LaTeX, these are rendered in a size appropriate for superscripts and subscripts,
but you can use a size modifier to change this, for example \code{'\\Large{"A"}'}.}

\item{label.style}{The name of a math font used to to typeset the label. One of
\code{c("mathbf", "mathrm", "mathit", "mathsf", "mathcal", "mathtt", " ")}.
The default, \code{"mathbf"} wraps the label inside \code{"\\mathbf{ }"}
commonly used for the name of a matrix.}

\item{space}{includes extra vertical space. Metric of the vertical space
must be 'ex', 'pt', 'mm', 'cm', 'em', 'bp', 'dd', 'pc', or 'in'}

\item{text}{argument to be used within \code{\\text{}}}

\item{lhs}{spacing size. Can be a number between -1 and 6. -1 provides negative
spaces and 0 gives no spacing. Input can also be a character vector, which will be
passed to \code{\\hspace{}} (e.g., \code{'1cm'}; see \code{space} argument
for supported metrics).
Default is 5, resulting in a \code{\\quad} space.}

\item{mid}{character vector to place in the middle of the space specification. Most
commonly this will be operators like \code{'='}}

\item{rhs}{see lhs for details. If left as \code{NULL} and \code{mid} is specified
the this will be set to \code{rhs} to create symmetric spaces around \code{mid}}

\item{times}{number of times to repeat the spacings}

\item{string}{a string that should have its text size modified. If missing
the size modifier is returned, which applies the size modifier
to the remainder of the text until reset with \code{Eqn_size()}}

\item{size}{numeric size of LaTeX text modifier,
ranging from -3 (\code{\\tiny}) to 5 (\code{\\HUGE}), with 0 defining the
normal test size (\code{\\normalsize}; default)}
}
\value{
Returns a character vector containing the LaTeX expressions for the given operation. You can pass
       this to \code{\link{cat}} to display the result on the console, or include it inside a call
       to \code{Eqn} to typeset it.
}
\description{
These functions extend \code{\link{Eqn}} to facilitate composing LaTeX equations with desirable features
and pleasant typography.

\itemize{
   \item{\code{Eqn_overset} and \code{Eqn_underset} typesets a label over or under a LaTeX expression
or a \code{"latexMatrix"} object}
   \item{\code{Eqn_overbrace} and \code{Eqn_underbrace} typesets a brace, with an optional label over or under an object}
   \item{\code{Eqn_newline},  \code{Eqn_hspace} and \code{Eqn_vspace} facilitate spacing of parts of an equation.}
   \item{\code{Eqn_size} changes size of LaTeX text; \code{Eqn_text} includes a literal string in equations.}
}
Each of these (except \code{Eqn_text}) have aliases without the \code{Eqn_} prefix for brevity.

For example, given the matrix \code{A = matrix(1:4), 2, 2)}, the call \code{Eqn(overset(A, "A"))}
generates:
\preformatted{
\overset{\mathbf{A}} 
 { \begin{pmatrix} 
  1 & 3 \\ 
  2 & 4 \\ 
  \end{pmatrix}
 }
}

 When rendered in LaTeX, this produces:
 \deqn{
 \overset{\mathbf{A}} 
 { \begin{pmatrix} 
  1 & 3 \\ 
  2 & 4 \\ 
  \end{pmatrix}
 }
 }
 
 You can also use these for straight LaTeX expressions, such this equation showing and labeling
 the Hat matrix in regression. See the examples for the call to \code{underbrace} for this.
 \deqn{\mathbf{\hat{y}} =
       \underbrace{\mathbf{X}(\mathbf{X}^{\top}\mathbf{X})^{-1}
       \mathbf{X}^{\top}}_{\mathbf{\mathbf{H}}}\mathbf{y}}

\code{Eqn_newline()} emits a newline (\code{\\}) in an equation, with
an optional increase to the padding following the newline.

\code{Eqn_text()} inserts a literal string to be rendered in a text font in an equation.

\code{Eqn_hspace()} is used to create (symmetric) equation spaces, most typically around
\code{=} signs
Input to \code{lhs}, \code{rhs} can be a
numeric to increase the size of the space or a
character vector to be passed to the LaTeX macro \code{\\hspace{}}.

\code{Eqn_vspace()} inserts vertical space between lines in an equation.
Typically used for aligned, multiline equations.

\code{Eqn_size()} is used to increase or decrease the size of LaTeX text and equations. Can be applied
to a specific string or applied to all subsequent text until overwritten.
}
\examples{
library(matlib)
A <- matrix(1:4, 2, 2)
B <- matrix(4:1, 2, 2)
AB <- A + B
Eqn(overset(A, "A"))
  #  missing label: uses the name of the object
Eqn(overset(A))

# test just a character LaTeX expression
Eqn('a', overset('=', '?'), 'b')

# a labelled latexMatrix equation
Eqn(overset(A, "A"), "+",
    overset(B, "B"), "=",
    underset(AB, "A+B"))
    
 # using a LaTeX expression as the label  
 Lambda <- latexMatrix("\\\\lambda", nrow=2, ncol=2,
                       diag=TRUE)
 Eqn(overset(Lambda, "\\\\Lambda"))

 # generate LaTeX expression for the Hat matrix, label as "H"
H <- "\\\\mathbf{X} (\\\\mathbf{X}^{\\\\top}\\\\mathbf{X})^{-1} \\\\mathbf{X}^{\\\\top}"
Eqn("\\\\mathbf{\\\\hat{y}} =", underbrace(H, "\\\\mathbf{H}"), "\\\\mathbf{y}")

# Combine this with overbrace
Eqn(overbrace(underbrace(H, "\\\\mathbf{H}"), "\\\\LARGE\\\\mathbf{\\\\hat{y}}"))


Eqn_newline()
Eqn_newline('10ex')


Eqn_hspace()
Eqn_hspace(3) # smaller
Eqn_hspace(3, times=2)
Eqn_hspace('1cm')

# symmetric spacing around mid
Eqn_hspace(mid='=')
Eqn_hspace(mid='=', times=2)


Eqn_vspace('1.5ex')
Eqn_vspace('1cm')



# set size globally
Eqn_size(size=3)
Eqn_size() # reset

# locally for defined string
string <- 'e = mc^2'
Eqn_size(string, size=1)


}
