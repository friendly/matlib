% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/symbolicMatrix.R
\name{symbolicMatrix}
\alias{symbolicMatrix}
\title{Create a Symbolic Matrix for LaTeX}
\usage{
symbolicMatrix(
  symbol = "x",
  nrow = "n",
  ncol = "m",
  matrix = "pmatrix",
  diag = FALSE,
  comma = FALSE,
  exponent,
  transpose = FALSE,
  lhs,
  print = TRUE
)
}
\arguments{
\item{symbol}{name for matrix elements, character string. For LaTeX symbols, the backslash must be escaped, e.g, \code{\\beta}.}

\item{nrow}{Number of rows, a single character representing rows symbolically, or an integer, generating
that many rows.}

\item{ncol}{Number of columns, a single character representing columns symbolically, or an integer, generating
that many columns.}

\item{matrix}{Character string giving the LaTeX matrix environment used in \code{\\begin{}}, \code{\\end{}}. Typically one of
\code{"pmatrix"} (uses parentheses \code{"(", ")"});
\code{"bmatrix"} (uses square brackets \code{"[", "]"});
\code{"Bmatrix"} (uses braces \code{"{", "}"};),
\code{"vmatrix"} (uses vertical bars \code{"|", "|"});
\code{"Vmatrix"} (uses double vertical bars \code{"||", "||"});
\code{"matrix"} (generates a plain matrix without delimeters).}

\item{diag}{logical; if \code{TRUE}, off-diagonal elements are all 0 (and \code{nrow} must == \code{ncol})}

\item{comma}{logical; if \code{TRUE}, commas are inserted between row and column subscripts}

\item{exponent}{if specified, e.g., "-1", or "1/2",  the exponent is applied to the matrix}

\item{transpose}{if TRUE, the transpose symbol "\\top" is appended to the matrix; may
also be a character string, e.g., \code{"T"}, \code{"\\prime"}, \code{"\textsf{T}"}}

\item{lhs}{optional LaTeX expression, e.g, "\\boldsymbol{\\Lamda}", for left-hand side of an equation
with the matrix on the right-hand side.}

\item{print}{logical; print the LaTeX code for the matrix on the console?; default: \code{TRUE}}
}
\value{
Returns invisibly the LaTeX representation of the matrix as a character string.

       Use \code{cat()} to display it at the console, or \code{\link[clipr]{write_clip}} to copy it to the clipboard
}
\description{
Constructs the LaTeX code for a symbolic matrix, like:
\preformatted{
 \\begin{pmatrix}
   x_{11}  & x_{12}  & \\dots  & x_{1m}  \\
   x_{21}  & x_{22}  & \\dots  & x_{2m}  \\
   \\vdots & \\vdots & \\ddots & \\vdots \\
   x_{n1}  & x_{n2}  & \\dots  & x_{nm}
 \\end{pmatrix}
 }

 When rendered in lateX, this produces:
 \deqn{
 \begin{pmatrix}
   x_{11} & x_{12} & \cdots & x_{1m} \\
   x_{21} & x_{22} & \cdots & x_{2m} \\
   \vdots & \vdots &        & \vdots \\
   x_{n1} & x_{n2} & \cdots & x_{nm} \\
 \end{pmatrix}
 }

% \figure{man/figures/symbMat-x.png}{options: width=150 alt="LaTeX result for the symbolic n x m matrix"}.

Alternatively, the number of rows and/or columns can be integers, generating a matrix of given size.

The function prints the resulting code to the console, or, using \code{\link[clipr]{write_clip}}, can be copied to the console,
or can be used used in a markdown chunk in a \code{Rmd} or \code{qmd} document, e.g,
\preformatted{
```{r results = "asis"}
symbolicMatrix("\\lambda", nrow=3, ncol=3,
               diag=TRUE,
               lhs = "\\boldsymbol{\\Lambda}")
```
}
}
\details{
This implementation assumes that the LaTeX \code{amsmath} package will be available because it uses the shorthands
\code{\\begin{pmatrix}}, ... rather than
\preformatted{
\\left(
  \\begin{array}
  ...
  \\end{array}
\\right)
}.

This function is experimental. Other features may be added.  E.g., it would be nice to:

\itemize{
 \item Specify exponents for the \bold{matrix elements}, e.g, a diagonal matrix of square roots of eigenvalues,
 \code{\\lambda_i^{1/2}} giving \eqn{\lambda_i^{1/2}}
 \item Specify "accents" for the symbols, e.g., when you want the elements to be given bars or hats: \code{\\widehat{\\beta}_{ij}}.
}
}
\examples{
symbolicMatrix()

# return value
mat <- symbolicMatrix(print = FALSE)
str(mat)
cat(mat)
# copy to clipboard
clipr::write_clip(mat)

# numeric rows/cols
symbolicMatrix(ncol=3)
symbolicMatrix(nrow=4)
symbolicMatrix(nrow=4, ncol=4)

# diagonal matrices
symbolicMatrix(nrow=3, ncol=3, diag=TRUE)
symbolicMatrix(nrow="n", ncol="n", diag=TRUE)

# commas, exponents, transpose
symbolicMatrix("\\\\beta", comma=TRUE, exponent="-1")
symbolicMatrix("\\\\beta", comma=TRUE, transpose=TRUE)
symbolicMatrix("\\\\beta", comma=TRUE, exponent="-1", transpose=TRUE)
}
\seealso{
\code{\link{matrix2latex}}
}
\author{
John Fox
}
