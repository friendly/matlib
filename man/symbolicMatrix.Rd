% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/symbolicMatrix.R
\name{symbolicMatrix}
\alias{symbolicMatrix}
\title{Create a Symbolic Matrix for LaTeX}
\usage{
symbolicMatrix(
  symbol = "x",
  nrow = "n",
  ncol = "m",
  matrix = "pmatrix",
  diag = FALSE,
  comma = FALSE,
  exponent,
  transpose = FALSE,
  prefix = "",
  suffix = "",
  lhs,
  print = TRUE
)
}
\arguments{
\item{symbol}{name for matrix elements, character string. For LaTeX symbols,
the backslash must be doubled because it is an escape character in R.
That is, you must use  \code{symbol = "\\\\beta"} to get \eqn{\beta}. Alternatively, this can be an
R matrix object, containing LaTeX code for the elements. For a row or column vector, use
\code{matrix(..., nrow=1)} or \code{matrix(..., ncol=1)}}

\item{nrow}{Number of rows, a single character representing rows symbolically, or an integer, generating
that many rows.}

\item{ncol}{Number of columns, a single character representing columns symbolically, or an integer, generating
that many columns.}

\item{matrix}{Character string giving the LaTeX matrix environment used in \code{\\begin{}}, \code{\\end{}}. Typically one of:
\describe{
   \item{\code{"pmatrix"}}{uses parentheses: \code{"(", ")"}}
   \item{\code{"bmatrix"}}{uses square brackets: \code{"[", "]"}}
   \item{\code{"Bmatrix"}}{uses braces: \code{"{", "}"}}
   \item{\code{"vmatrix"}}{uses vertical bars: \code{"|", "|"}}
   \item{\code{"Vmatrix"}}{uses double vertical bars: \code{"||", "||"}}
   \item{\code{"matrix"}}{generates a plain matrix without delimeters}
}}

\item{diag}{logical; if \code{TRUE}, off-diagonal elements are all 0 (and \code{nrow} must == \code{ncol})}

\item{comma}{logical; if \code{TRUE}, commas are inserted between row and column subscripts, as in
\code{x_{1,1}}.}

\item{exponent}{if specified, e.g., "-1", or "1/2",  the exponent is applied to the matrix}

\item{transpose}{if TRUE, the transpose symbol "\\top" is appended to the matrix; this may
also be a character string, e.g., \code{"T"}, \code{"\\prime"}, \code{"\textsf{T}"} are
commonly used.}

\item{prefix}{optional character string to be pre-pended to each matrix element, e.g, to wrap each
element in a function like \code{"\\sqrt"} (but add braces)}

\item{suffix}{optional character string to be appended to each matrix element, e.g., for exponents
on each element}

\item{lhs}{character; an optional LaTeX expression, e.g, "\code{\\boldsymbol{\\Lamda}}", for left-hand
side of an equation
with the generated matrix on the right-hand side.}

\item{print}{logical; print the LaTeX code for the matrix on the console?; default: \code{TRUE};
if \code{FALSE}, the generated LaTeX expression is returned as a character string.}
}
\value{
If \code{\code{print = FALSE}}, returns the LaTeX representation of the matrix as a character string;
       otherwise returns \code{NULL} invisibly.
       If you assign to a variable, you can use \code{\link[clipr]{write_clip}} to copy it to the clipboard.

       As a side-effect, by default (unless \code{print = FALSE}) the function uses
       \code{cat()} to display the result at the console.
}
\description{
Constructs the LaTeX code for a symbolic matrix, whose elements are a \code{symbol}, with row and column subscripts.
For example:
\preformatted{
 \\begin{pmatrix}
   x_{11}  & x_{12}  & \\dots  & x_{1m}  \\
   x_{21}  & x_{22}  & \\dots  & x_{2m}  \\
   \\vdots & \\vdots & \\ddots & \\vdots \\
   x_{n1}  & x_{n2}  & \\dots  & x_{nm}
 \\end{pmatrix}
 }

 When rendered in LaTeX, this produces:
 \deqn{
 \begin{pmatrix}
   x_{11} & x_{12} & \cdots & x_{1m} \\
   x_{21} & x_{22} & \cdots & x_{2m} \\
   \vdots & \vdots &        & \vdots \\
   x_{n1} & x_{n2} & \cdots & x_{nm} \\
 \end{pmatrix}
 }

% \figure{man/figures/symbMat-x.png}{options: width=150 alt="LaTeX result for the symbolic n x m matrix"}.

Alternatively, instead of characters,
the number of rows and/or columns can be \bold{integers}, generating a matrix of given size.

As well, instead of a character for the matrix \code{symbol}, you can supply a \bold{matrix} of arbitrary character
strings (in LaTeX notation), and these will be used as the elements of the matrix.

The function prints the resulting code to the console (by default). When the result is assigned to variable,
you can send it to the clipboard using \code{\link[clipr]{write_clip}}. Perhaps most convenient of all,
the function can be used used in a markdown chunk in a \code{Rmd} or \code{qmd} document, e.g,

\preformatted{
```{r results = "asis"}
symbolicMatrix("\\lambda", nrow=2, ncol=2,
               diag=TRUE,
               lhs = "\\boldsymbol{\\Lambda}")
```
}

This generates
\deqn{
 \boldsymbol{\Lambda} = \begin{pmatrix}
 \lambda_{1} & 0           \\
 0           & \lambda_{2} \\
 \end{pmatrix}
 }
}
\details{
This implementation assumes that the LaTeX \code{amsmath} package will be available because it uses the shorthands
\code{\\begin{pmatrix}}, ... rather than
\preformatted{
\\left(
  \\begin{array}(ccc)
  ...
  \\end{array}
\\right)
}.

You may need to use \code{extra_dependencies: ["amsmath"]} in your YAML header of a \code{Rmd} or \code{qmd} file.

You can actually supply a numeric matrix as the \code{symbol}, but the result will not be pretty
unless the elements are integers or are rounded. For a LaTeX representation of general numeric matrices, use
\code{\link{matrix2latex}}.

% This function is \bold{experimental}. Other features may be added.  E.g., it would be nice to:

%\itemize{
% \item Specify exponents for the \bold{matrix elements}, e.g, a diagonal matrix of square roots of eigenvalues,
% \code{\\lambda_i^{1/2}} giving \eqn{\lambda_i^{1/2}}
%}
}
\examples{
symbolicMatrix()

# return value
mat <- symbolicMatrix(print = FALSE)
str(mat)
cat(mat)
# copy to clipboard
#clipr::write_clip(mat)    # this can't be done in non-interactive mode

# can use a complex symbol
symbolicMatrix("\\\\widehat{\\\\beta}", 2, 4)

# numeric rows/cols
symbolicMatrix(ncol=3)
symbolicMatrix(nrow=4)
symbolicMatrix(nrow=4, ncol=4)

# diagonal matrices
symbolicMatrix(nrow=3, ncol=3, diag=TRUE)
symbolicMatrix(nrow="n", ncol="n", diag=TRUE)

# commas, exponents, transpose
symbolicMatrix("\\\\beta", comma=TRUE, exponent="-1")
symbolicMatrix("\\\\beta", comma=TRUE, transpose=TRUE)
symbolicMatrix("\\\\beta", comma=TRUE, exponent="-1", transpose=TRUE)

# for a row/column vector, wrap in matrix()
symbolicMatrix(matrix(LETTERS[1:4], nrow=1))
symbolicMatrix(matrix(LETTERS[1:4], ncol=1))

# represent the SVD, X = U D V'  symbolically
X <- symbolicMatrix("x", "n", "p")
U <- symbolicMatrix("u", "n", "k")
D <- symbolicMatrix("\\\\lambda", "k", "k", diag=TRUE)
V <- symbolicMatrix("v", "k", "p", transpose = TRUE)
cat("\\\\mathrm{SVD:}\n", X, "=\n", U, D, V)

# specify left hand side
symbolicMatrix("\\\\lambda", 3, 3, diag=TRUE, lhs = "\\\\boldsymbol{\\\\Lambda}")

# supply a matrix for 'symbol'
m <- matrix(c(
  "\\\\alpha", "\\\\beta",
  "\\\\gamma", "\\\\delta",
  "\\\\epsilon", "\\\\pi",
  0 , 0), 4, 2, byrow=TRUE)
symbolicMatrix(m)

# Identity matrix
symbolicMatrix(diag(3), lhs = "\\\\mathbf{I}_3")

# prefix / suffix
symbolicMatrix(prefix="\\\\sqrt{", suffix="}")
symbolicMatrix(suffix="^{1/2}")

}
\seealso{
\code{\link{matrix2latex}}, \code{\link[clipr]{write_clip}}
}
\author{
John Fox
}
