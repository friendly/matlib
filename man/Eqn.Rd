% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Eqn.R
\name{Eqn}
\alias{Eqn}
\alias{Eqn_newline}
\alias{Eqn_text}
\alias{Eqn_hspace}
\alias{Eqn_size}
\alias{ref}
\title{Create a LaTeX Equation Wrapper}
\usage{
Eqn(
  ...,
  label = NULL,
  align = FALSE,
  html_output = knitr::is_html_output(),
  mat_args = list()
)

Eqn_newline()

Eqn_text(text)

Eqn_hspace(lhs = 5, mid = "", rhs = NULL, times = 1)

Eqn_size(string, size = 0)

ref(label, html_output = knitr::is_html_output(), parentheses = TRUE)
}
\arguments{
\item{...}{comma separated expressions that are either a) a character vector,
  which will be automatically wrapped the
  expression inside a call to \code{\link{cat}}, b) a \code{matrix} object
  containing character or numeric information, which will be passed \code{\link{latexMatrix}},
  or c) an object that was explicitly created via \code{\link{latexMatrix}}, which
  provides greater specificity.

  Note that user defined functions that use \code{\link{cat}} within
  their body should return an empty character vector to avoid printing the
  returned object}

\item{label}{the equation label used within \code{\link{Eqn}} or
defined explicitly in the document}

\item{align}{logical; use the \code{align} environment with explicit \code{&} representing alignment
points. Default: \code{FALSE}}

\item{html_output}{logical; use references for HTML outputs instead
of the LaTeX? Automatically changed for compiled documents
that support \code{knitr}}

\item{mat_args}{list of arguments to be passed to \code{\link{latexMatrix}} to change the
properties of the \code{matrix} input objects. Note that these inputs are used globally, and apply to
each \code{matrix} objects supplied. If further specificity is required create
\code{\link{latexMatrix}} objects directly.}

\item{text}{argument to be used within \code{\\text{}}}

\item{lhs}{spacing size. Can be a number between -1 and 6. -1 provides negative
spaces and 0 gives no spacing. Input can also be a character vector, which will be
passed to \code{\\hspace{}} (e.g., \code{'1cm'}).
Default is 5, resulting in a \code{\\quad} space}

\item{mid}{character vector to place in the middle of the space specification. Most
commonly this will be operators like \code{'='}}

\item{rhs}{see lhs for details. If left as \code{NULL} and \code{mid} is specified
the this will be set to \code{rhs} to create symmetric spaces around \code{mid}}

\item{times}{number of times to repeat the spacings}

\item{string}{a string that should have its text size modified. If missing
the size modifier is returned, which applied the size modifier
for the remainder of the text until reset with \code{Eqn_size()}}

\item{size}{numeric size of LaTeX text modifier,
ranging from -3 (\code{\\tiny}) to 5 (\code{\\HUGE}), with 0 defining the
normal test size (\code{\\normalsize}; default)}

\item{parentheses}{logical; include parentheses around the reference equation?
Only changes the behaviour for LaTeX referencing}
}
\description{
This function is designed to produce LaTeX expressions that can be copied/pasted into documents or
used directly in \code{.Rmd} or \code{.qmd} documents to compile to equations.
It wraps the equations in either a \code{\\begin{equation} ...\\end{equation}} or
\code{\\begin{align} ...\\end{align}} environment. See also \code{\link{ref}} for
inline referencing.

In a code chunk, use the chunk options \code{results='asis', echo=FALSE}.

Used to create (symmetric) equation spaces. Input to lhs/rhs can be a
numeric to increase the size of the space or a
character vector to be passed to \code{\\hspace{}}.

Used to increase of decrease the size of LaTeX text and equations. Can be applied
to a specific string or applied to all subsequent text until overwritten.

Depending on the output type this function will provide the correct
inline wrapper for MathJax or LaTeX equations. This provides more
consistent referencing when switching between HTML and PDF outputs.
}
\examples{

# character input
Eqn('e=mc^2')

# Equation numbers & labels
Eqn('e=mc^2', label = 'eq:einstein')
Eqn("X=U \\\\lambda V", label='eq:svd')

# html output (auto detected in compiled documents)
Eqn('e=mc^2', label = 'eq:einstein', html_output = TRUE)

# Multiple expressions
Eqn("e=mc^2",
    Eqn_newline(),
    "X=U \\\\lambda V", label='eq:svd')

# expressions that use cat() within their calls
Eqn('SVD = ',
    latexMatrix("u", "n", "k"),
    latexMatrix("\\\\lambda", "k", "k", diag=TRUE),
    latexMatrix("v", "k", "p", transpose = TRUE),
    label='eq:svd')

# align equations using & operator
Eqn("X &= U \\\\lambda V", Eqn_newline(),
    "& = ", latexMatrix("u", "n", "k"),
    latexMatrix("\\\\lambda", "k", "k", diag=TRUE),
    latexMatrix("v", "k", "p", transpose = TRUE),
    align=TRUE)

#  numeric/character matrix example
A <- matrix(c(2, 1, -1,
              -3, -1, 2,
              -2,  1, 2), 3, 3, byrow=TRUE)
b <- c(8, -11, -3)

cbind(A,b) |> Eqn()
cbind(A,'\\\\bigm|', b) |> Eqn()

# change matrix brackets globally
cbind(A,b) |> Eqn(mat_args=list(matrix='bmatrix'))

# with showEqn()
showEqn(A, b, latex=TRUE) |> Eqn()


Eqn_hspace()
Eqn_hspace(3) # smaller
Eqn_hspace(3, times=2)
Eqn_hspace('1cm')

# symmetric spacing around mid
Eqn_hspace(mid='=')
Eqn_hspace(mid='=', times=2)


# set size globally
Eqn_size(size=3)
Eqn_size() # reset

# locally for defined string
string <- 'e = mc^2'
Eqn_size(string, size=1)



# used inside of Eqn() or manually defined labels in the document
Eqn('e = mc^2', label='eq:einstein')

# use within inline block via `r ref()`
ref('eq:einstein')
ref('eq:einstein', parentheses=FALSE)
ref('eq:einstein', html_output=TRUE)

}
\seealso{
\code{\link{latexMatrix}}, \code{\link{matrix2latex}}, \code{\link{ref}}

\code{\link{Eqn}}
}
\author{
Phil Chalmers
}
