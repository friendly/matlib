---
title: "Eqn() test with Quarto"
engine: knitr
---

```{r}
#| include : FALSE
library(matlib)
```

Standard equation and reference

$$
f\left(k\right) = \binom{n}{k} p^k\left(1-p\right)^{n-k}
$$ {#eq-binom}

See @eq-binom, and [-@eq-binom]

Syntax generated with `Eqn()`. Raw output:

```{r}
Eqn("f\\left(k\\right) = \\binom{n}{k} p^k\\left(1-p\\right)^{n-k}",
    quarto=TRUE)
```

Rendered.

```{r}
#| results: 'asis'
Eqn("f\\left(k\\right) = \\binom{n}{k} p^k\\left(1-p\\right)^{n-k}",
    quarto=TRUE)
```

With equation label and number.

```{r}
#| results: 'asis'
Eqn("f\\left(k\\right) = \\binom{n}{k} p^k\\left(1-p\\right)^{n-k}",
    quarto=TRUE, label='eq-binom2')
```

## Inline equation referencing.

- Manually with Quarto syntax (works): @eq-binom and @eq-binom2
- Manually with `cat()` and string statements (does not work): `{r} cat('@eq-binom')` and `{r} cat('@eq-binom2')`, `{r} '@eq-binom'` and `{r} '@eq-binom2'`,  `{r} print('@eq-binom')` and `{r} print('@eq-binom2')`
- With `matlib` (does not work): `{r} ref("eq-binom", quarto=TRUE)` and `{r} ref("eq-binom2", quarto=TRUE)`

Yet, if used within an equation it will work...
    
```{r}
#| results: 'asis'
"@eq-binom"
```
